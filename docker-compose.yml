version: '3.8'
services:
  db:
    image: postgres:14.1-alpine
    hostname: db
    user: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=requests
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-tmp:/var/lib/postgresql/tmp
    restart: always
    command: postgres -c logging_collector=on -c log_connections=yes -c log_destination='stderr' -c stats_temp_directory=/var/lib/postgresql/tmp
    networks:
      - requestsstack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
  api:
    container_name: api
    build:
      context: ./
      dockerfile: Dockerfile
    image: rapt:latest
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    restart: on-failure
    networks:
      - requestsstack
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
          
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: requests
    links:
      - db
volumes:
  db-data:
    name: db-data
  db-tmp:
    name: db-tmp
networks:
  requestsstack:
    driver: bridge
